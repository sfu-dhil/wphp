<?php

declare(strict_types=1);

/*
 * (c) 2021 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Repository;

use App\Entity\Firm;
use App\Entity\Person;
use App\Entity\Title;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\Query;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReportRepository {
    private EntityManagerInterface $em;

    public function titlesFinalCheckQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Title::class, 't');
        $qb->where('t.finalcheck = 0');
        $qb->andWhere('t.finalattempt = 0');
        $qb->orderBy('t.id');

        return $qb->getQuery();
    }

    public function titlesDateQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Title::class, 't');
        $qb->where('t.pubdate IS NOT NULL');
        $qb->andWhere('regexp(t.pubdate, \'[^0-9-]\') = 1');
        $qb->orderBy('t.id');

        return $qb->getQuery();
    }

    public function firmsFinalCheckQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Firm::class, 't');
        $qb->where('t.finalcheck = 0');
        $qb->orderBy('t.id');

        return $qb->getQuery();
    }

    public function personsFinalCheckQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Person::class, 't');
        $qb->where('t.finalcheck = 0');
        $qb->orderBy('t.id');

        return $qb->getQuery();
    }

    public function editionsQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Title::class, 't');
        $qb->where('t.edition LIKE \'%irish%\'');
        $qb->where('t.edition LIKE \'%american%\'');
        $qb->where('regexp(t.edition, \'[0-9]\') = 1');
        $qb->orderBy('t.id');

        return $qb->getQuery();
    }

    public function editionsToCheckQuery() : Query {
        $qb = $this->em->createQueryBuilder();
        $qb->select('t');
        $qb->from(Title::class, 't');
        $qb->where('t.editionChecked = 0');
        $qb->orderBy('t.id', 'ASC');

        return $qb->getQuery();
    }

    /**
     * @required
     */
    public function setEntityManager(EntityManagerInterface $em) : void {
        $this->em = $em;
    }
}
