<?php

declare(strict_types=1);

/*
 * (c) 2021 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Repository;

use App\Entity\Firmrole;
use App\Entity\TitleFirmrole;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Query;
use Doctrine\Persistence\ManagerRegistry;

/**
 * FirmroleRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FirmroleRepository extends ServiceEntityRepository {
    public function __construct(ManagerRegistry $registry) {
        parent::__construct($registry, Firmrole::class);
    }

    public function indexQuery() : Query {
        $qb = $this->createQueryBuilder('e');
        $qb->orderBy('e.name');

        return $qb->getQuery();
    }

    /**
     * Do a name search for a typeahead query.
     *
     * @return mixed
     */
    public function typeaheadQuery(string $q) {
        $qb = $this->createQueryBuilder('e');
        $qb->andWhere('e.name LIKE :q');
        $qb->orderBy('e.name');
        $qb->setParameter('q', "{$q}%");

        return $qb->getQuery()->execute();
    }

    public function titlesQuery(Firmrole $firmrole) : Query {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('tfr');
        $qb->from(TitleFirmrole::class, 'tfr');
        $qb->where('tfr.firmrole = :firmrole');
        $qb->setParameter('firmrole', $firmrole);

        return $qb->getQuery();
    }

    /**
     * Count the firms in a given role.
     *
     * @throws NonUniqueResultException|NoResultException
     *
     * @return mixed
     */
    public function countFirms(Firmrole $firmrole) {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('count(1)');
        $qb->andWhere('titlefirmrole.firmrole = :firmrole');
        $qb->setParameter('firmrole', $firmrole);
        $qb->from(TitleFirmrole::class, 'titlefirmrole');

        return $qb->getQuery()->getSingleScalarResult();
    }
}
