<?php

declare(strict_types=1);

/*
 * (c) 2021 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Repository;

use App\Entity\OsborneMarc;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * EnRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OsborneMarcRepository extends ServiceEntityRepository {
    public function __construct(ManagerRegistry $registry) {
        parent::__construct($registry, OsborneMarc::class);
    }

    /**
     * Generate a query for the index page.
     *
     * @return \Doctrine\ORM\Query
     */
    public function indexQuery() {
        $qb = $this->createQueryBuilder('m');
        $qb->where("m.field = 'ldr'");

        return $qb->getQuery();
    }

    /**
     * Do a name search for a typeahead query.
     *
     * @param string $q
     *
     * @return mixed
     */
    public function searchQuery($q) {
        $dql = <<<'ENDSQL'
            SELECT e.titleId, max(MATCH (e.fieldData) AGAINST (:q BOOLEAN)) as HIDDEN score
            FROM App:OsborneMarc e
            WHERE MATCH (e.fieldData) AGAINST (:q BOOLEAN) > 0 AND e.field IN ('245' , '100')
            group by e.titleId order by score desc
            ENDSQL;
        $query = $this->_em->createQuery($dql);
        $query->setParameter('q', $q);

        return $query->execute();
    }
}
