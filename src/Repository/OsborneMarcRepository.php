<?php

declare(strict_types=1);

/*
 * (c) 2021 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Repository;

use App\Entity\OsborneMarc;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\Query;
use Doctrine\Persistence\ManagerRegistry;

/**
 * EnRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OsborneMarcRepository extends ServiceEntityRepository {
    public function __construct(ManagerRegistry $registry) {
        parent::__construct($registry, OsborneMarc::class);
    }

    /**
     * Generate a query for the index page.
     */
    public function indexQuery() : Query {
        $qb = $this->createQueryBuilder('m');
        $qb->where("m.field = 'ldr'");

        return $qb->getQuery();
    }

    /**
     * Do a name search for a typeahead query.
     *
     * @return mixed
     */
    public function searchQuery(string $q) {
        $qb = $this->createQueryBuilder('e');
        $qb->select('e.titleId');
        $qb->addSelect($qb->expr()->max('MATCH(e.fieldData) AGAINST (:q)') . 'as HIDDEN score');
        $qb->groupBy('e.titleId');
        $qb->orderBy('score', 'desc');
        $qb->setParameter('q', $q);

        return $qb->getQuery();
    }
}
